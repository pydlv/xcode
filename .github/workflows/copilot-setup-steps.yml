name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    env:
      COPILOT_AGENT_FIREWALL_ALLOW_LIST_ADDITIONS: download.jetbrains.com
      # Optimize Gradle performance during setup
      GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Xmx2g -XX:MaxMetaspaceSize=512m"

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK and Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # You can choose other distributions like 'zulu', 'adopt'
          java-version: '21'   # Or your project's required Java version (e.g., '11', '21')
          cache: 'gradle'      # This enables caching for Gradle dependencies

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Pre-warm Gradle daemon and prepare for Qodana
        run: |
          # Start Gradle daemon and prepare dependencies for Qodana analysis
          ./gradlew qodanaPrep --no-build-cache
          echo "Gradle daemon warmed up and dependencies prepared"

      - name: Cache Qodana CLI
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/qodana
          key: qodana-cli-v2025.1.2-${{ runner.os }}
          restore-keys: |
            qodana-cli-v2025.1.2-

      - name: Install Qodana CLI
        run: |
          if [ ! -f /usr/local/bin/qodana ]; then
            echo "Installing Qodana CLI..."
            bash .github/setup-qodana.sh
          else
            echo "Qodana CLI already cached, verifying..."
            qodana --version
          fi
